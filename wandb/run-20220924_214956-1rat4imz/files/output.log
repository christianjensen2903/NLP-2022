
  0%|                                                                                                                          | 0/420 [00:00<?, ?it/s]You're using a DistilBertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.


  1%|â–Š                                                                                                               | 3/420 [01:15<2:49:12, 24.35s/it]Traceback (most recent call last):
  File "/Users/christianjensen/Library/CloudStorage/OneDrive-UniversityofCopenhagen/2 - Projects/NLP Course/NLP-2022/test_sequence_labeller.py", line 26, in <module>
    sequence_labeller.train(X_train, None)
  File "/Users/christianjensen/Library/CloudStorage/OneDrive-UniversityofCopenhagen/2 - Projects/NLP Course/NLP-2022/models/SequenceLabeller.py", line 122, in train
    self.trainer.train()
  File "/opt/homebrew/lib/python3.9/site-packages/transformers/trainer.py", line 1521, in train
    return inner_training_loop(
  File "/opt/homebrew/lib/python3.9/site-packages/transformers/trainer.py", line 1763, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/opt/homebrew/lib/python3.9/site-packages/transformers/trainer.py", line 2517, in training_step
    loss.backward()
  File "/opt/homebrew/lib/python3.9/site-packages/torch/_tensor.py", line 363, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/opt/homebrew/lib/python3.9/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  File "/opt/homebrew/lib/python3.9/site-packages/wandb/wandb_torch.py", line 282, in <lambda>
    handle = var.register_hook(lambda grad: _callback(grad, log_track))
KeyboardInterrupt